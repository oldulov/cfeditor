/*
* generated by Xtext
*/

package edu.kit.scc.cfeditor.cfengine.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class CfengineEditorGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class CfModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CfModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsAbstractElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//CfModel:
		//	elements+=AbstractElement*;
		public ParserRule getRule() { return rule; }

		//elements+=AbstractElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_0() { return cElementsAbstractElementParserRuleCall_0; }
	}

	public class CLASS_IDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CLASS_ID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final RuleCall cCLASS_IDParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCLASS_IDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cCLASS_IDParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cFullStopKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final RuleCall cCLASS_IDParserRuleCall_2_3_1 = (RuleCall)cGroup_2_3.eContents().get(1);
		
		//CLASS_ID returns ecore::EString:
		//	ID ("." CLASS_ID)? | "!" CLASS_ID | "(" CLASS_ID ")" ("." CLASS_ID)?;
		public ParserRule getRule() { return rule; }

		//ID ("." CLASS_ID)? | "!" CLASS_ID | "(" CLASS_ID ")" ("." CLASS_ID)?
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID ("." CLASS_ID)?
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//("." CLASS_ID)?
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"."
		public Keyword getFullStopKeyword_0_1_0() { return cFullStopKeyword_0_1_0; }

		//CLASS_ID
		public RuleCall getCLASS_IDParserRuleCall_0_1_1() { return cCLASS_IDParserRuleCall_0_1_1; }

		//"!" CLASS_ID
		public Group getGroup_1() { return cGroup_1; }

		//"!"
		public Keyword getExclamationMarkKeyword_1_0() { return cExclamationMarkKeyword_1_0; }

		//CLASS_ID
		public RuleCall getCLASS_IDParserRuleCall_1_1() { return cCLASS_IDParserRuleCall_1_1; }

		//"(" CLASS_ID ")" ("." CLASS_ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//CLASS_ID
		public RuleCall getCLASS_IDParserRuleCall_2_1() { return cCLASS_IDParserRuleCall_2_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//("." CLASS_ID)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"."
		public Keyword getFullStopKeyword_2_3_0() { return cFullStopKeyword_2_3_0; }

		//CLASS_ID
		public RuleCall getCLASS_IDParserRuleCall_2_3_1() { return cCLASS_IDParserRuleCall_2_3_1; }
	}

	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBundleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBodyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////(ID | '(' | ')' | '|' | '!' | '.')+;
		////PLACEHOLDER:
		////	(ANY_OTHER | ID | STRING | '=>' | ';' | ',' | '(' | ')' | '{' | '}' | '@');
		////PLACEHOLDERB:
		////	(ANY_OTHER | ID | STRING | '=>' | ';' | ',' | '(' | ')');
		//AbstractElement:
		//	Bundle | Body;
		public ParserRule getRule() { return rule; }

		//Bundle | Body
		public Alternatives getAlternatives() { return cAlternatives; }

		//Bundle
		public RuleCall getBundleParserRuleCall_0() { return cBundleParserRuleCall_0; }

		//Body
		public RuleCall getBodyParserRuleCall_1() { return cBodyParserRuleCall_1; }
	}

	public class BundleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Bundle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBundleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cComponentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComponentBundleComponentParserRuleCall_1_0 = (RuleCall)cComponentAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVariablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVariablesIDTerminalRuleCall_3_1_0 = (RuleCall)cVariablesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cVariablesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cVariablesIDTerminalRuleCall_3_2_1_0 = (RuleCall)cVariablesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPromiseTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPromiseTypeBundlePromiseTypeParserRuleCall_5_0 = (RuleCall)cPromiseTypeAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Bundle:
		//	"bundle" component=BundleComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{"
		//	promiseType+=BundlePromiseType* "}";
		public ParserRule getRule() { return rule; }

		//"bundle" component=BundleComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{"
		//promiseType+=BundlePromiseType* "}"
		public Group getGroup() { return cGroup; }

		//"bundle"
		public Keyword getBundleKeyword_0() { return cBundleKeyword_0; }

		//component=BundleComponent
		public Assignment getComponentAssignment_1() { return cComponentAssignment_1; }

		//BundleComponent
		public RuleCall getComponentBundleComponentParserRuleCall_1_0() { return cComponentBundleComponentParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" variables+=ID ("," variables+=ID)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//variables+=ID
		public Assignment getVariablesAssignment_3_1() { return cVariablesAssignment_3_1; }

		//ID
		public RuleCall getVariablesIDTerminalRuleCall_3_1_0() { return cVariablesIDTerminalRuleCall_3_1_0; }

		//("," variables+=ID)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//variables+=ID
		public Assignment getVariablesAssignment_3_2_1() { return cVariablesAssignment_3_2_1; }

		//ID
		public RuleCall getVariablesIDTerminalRuleCall_3_2_1_0() { return cVariablesIDTerminalRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//promiseType+=BundlePromiseType*
		public Assignment getPromiseTypeAssignment_5() { return cPromiseTypeAssignment_5; }

		//BundlePromiseType
		public RuleCall getPromiseTypeBundlePromiseTypeParserRuleCall_5_0() { return cPromiseTypeBundlePromiseTypeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class BundlePromiseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BundlePromiseType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPromisesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPromisesBundlePromiseParserRuleCall_2_0 = (RuleCall)cPromisesAssignment_2.eContents().get(0);
		private final Assignment cClassesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassesBundleClassParserRuleCall_3_0 = (RuleCall)cClassesAssignment_3.eContents().get(0);
		
		//BundlePromiseType:
		//	name=ID ":" promises+=BundlePromise* classes+=BundleClass*;
		public ParserRule getRule() { return rule; }

		//name=ID ":" promises+=BundlePromise* classes+=BundleClass*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//promises+=BundlePromise*
		public Assignment getPromisesAssignment_2() { return cPromisesAssignment_2; }

		//BundlePromise
		public RuleCall getPromisesBundlePromiseParserRuleCall_2_0() { return cPromisesBundlePromiseParserRuleCall_2_0; }

		//classes+=BundleClass*
		public Assignment getClassesAssignment_3() { return cClassesAssignment_3; }

		//BundleClass
		public RuleCall getClassesBundleClassParserRuleCall_3_0() { return cClassesBundleClassParserRuleCall_3_0; }
	}

	public class BundleClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BundleClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCLASS_IDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPromisesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPromisesBundlePromiseParserRuleCall_2_0 = (RuleCall)cPromisesAssignment_2.eContents().get(0);
		
		////TODO + or * ?
		//BundleClass:
		//	name=CLASS_ID "::" promises+=BundlePromise+;
		public ParserRule getRule() { return rule; }

		//name=CLASS_ID "::" promises+=BundlePromise+
		public Group getGroup() { return cGroup; }

		//name=CLASS_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//CLASS_ID
		public RuleCall getNameCLASS_IDParserRuleCall_0_0() { return cNameCLASS_IDParserRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }

		//promises+=BundlePromise+
		public Assignment getPromisesAssignment_2() { return cPromisesAssignment_2; }

		//BundlePromise
		public RuleCall getPromisesBundlePromiseParserRuleCall_2_0() { return cPromisesBundlePromiseParserRuleCall_2_0; }
	}

	public class BundlePromiseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BundlePromise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValuesPromiseValueParserRuleCall_1_0_0 = (RuleCall)cValuesAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cValuesPromiseValueParserRuleCall_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		////name=STRING (values+=PromiseValue (',' values+=PromiseValue)*)* ';';
		//BundlePromise:
		//	name=STRING (values+=PromiseValue ("," values+=PromiseValue)*)? ";";
		public ParserRule getRule() { return rule; }

		//name=STRING (values+=PromiseValue ("," values+=PromiseValue)*)? ";"
		public Group getGroup() { return cGroup; }

		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }

		//(values+=PromiseValue ("," values+=PromiseValue)*)?
		public Group getGroup_1() { return cGroup_1; }

		//values+=PromiseValue
		public Assignment getValuesAssignment_1_0() { return cValuesAssignment_1_0; }

		//PromiseValue
		public RuleCall getValuesPromiseValueParserRuleCall_1_0_0() { return cValuesPromiseValueParserRuleCall_1_0_0; }

		//("," values+=PromiseValue)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//","
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }

		//values+=PromiseValue
		public Assignment getValuesAssignment_1_1_1() { return cValuesAssignment_1_1_1; }

		//PromiseValue
		public RuleCall getValuesPromiseValueParserRuleCall_1_1_1_0() { return cValuesPromiseValueParserRuleCall_1_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class PromiseValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PromiseValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeywordAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeywordIDTerminalRuleCall_0_0 = (RuleCall)cKeywordAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_2_0 = (Alternatives)cAlternatives_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_0_0 = (Assignment)cAlternatives_2_0.eContents().get(0);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_0_0_0 = (RuleCall)cValuesAssignment_2_0_0.eContents().get(0);
		private final Assignment cFunctionsAssignment_2_0_1 = (Assignment)cAlternatives_2_0.eContents().get(1);
		private final RuleCall cFunctionsSimpleFunctionParserRuleCall_2_0_1_0 = (RuleCall)cFunctionsAssignment_2_0_1.eContents().get(0);
		private final Assignment cValuesAssignment_2_0_2 = (Assignment)cAlternatives_2_0.eContents().get(2);
		private final RuleCall cValuesIDTerminalRuleCall_2_0_2_0 = (RuleCall)cValuesAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_1_1 = (Alternatives)cGroup_2_1.eContents().get(1);
		private final Assignment cValuesAssignment_2_1_1_0 = (Assignment)cAlternatives_2_1_1.eContents().get(0);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_1_1_0_0 = (RuleCall)cValuesAssignment_2_1_1_0.eContents().get(0);
		private final Assignment cFunctionsAssignment_2_1_1_1 = (Assignment)cAlternatives_2_1_1.eContents().get(1);
		private final RuleCall cFunctionsSimpleFunctionParserRuleCall_2_1_1_1_0 = (RuleCall)cFunctionsAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1_2_1 = (Alternatives)cGroup_2_1_2.eContents().get(1);
		private final Assignment cValuesAssignment_2_1_2_1_0 = (Assignment)cAlternatives_2_1_2_1.eContents().get(0);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_1_2_1_0_0 = (RuleCall)cValuesAssignment_2_1_2_1_0.eContents().get(0);
		private final Assignment cFunctionsAssignment_2_1_2_1_1 = (Assignment)cAlternatives_2_1_2_1.eContents().get(1);
		private final RuleCall cFunctionsSimpleFunctionParserRuleCall_2_1_2_1_1_0 = (RuleCall)cFunctionsAssignment_2_1_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Keyword cCommercialAtKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_2_2_3 = (RuleCall)cGroup_2_2.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_2_2_4 = (Keyword)cGroup_2_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_2_2_5 = (Keyword)cGroup_2_2.eContents().get(5);
		
		////TODO "| ID"?
		//PromiseValue:
		//	keyword=ID "=>" ((values+=STRING | functions+=SimpleFunction | values+=ID) | "{" (values+=STRING |
		//	functions+=SimpleFunction) ("," (values+=STRING | functions+=SimpleFunction))* "}" | "{" "@" "(" ID ")" "}");
		public ParserRule getRule() { return rule; }

		//keyword=ID "=>" ((values+=STRING | functions+=SimpleFunction | values+=ID) | "{" (values+=STRING |
		//functions+=SimpleFunction) ("," (values+=STRING | functions+=SimpleFunction))* "}" | "{" "@" "(" ID ")" "}")
		public Group getGroup() { return cGroup; }

		//keyword=ID
		public Assignment getKeywordAssignment_0() { return cKeywordAssignment_0; }

		//ID
		public RuleCall getKeywordIDTerminalRuleCall_0_0() { return cKeywordIDTerminalRuleCall_0_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//(values+=STRING | functions+=SimpleFunction | values+=ID) | "{" (values+=STRING | functions+=SimpleFunction) (","
		//(values+=STRING | functions+=SimpleFunction))* "}" | "{" "@" "(" ID ")" "}"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//values+=STRING | functions+=SimpleFunction | values+=ID
		public Alternatives getAlternatives_2_0() { return cAlternatives_2_0; }

		//values+=STRING
		public Assignment getValuesAssignment_2_0_0() { return cValuesAssignment_2_0_0; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_0_0_0() { return cValuesSTRINGTerminalRuleCall_2_0_0_0; }

		//functions+=SimpleFunction
		public Assignment getFunctionsAssignment_2_0_1() { return cFunctionsAssignment_2_0_1; }

		//SimpleFunction
		public RuleCall getFunctionsSimpleFunctionParserRuleCall_2_0_1_0() { return cFunctionsSimpleFunctionParserRuleCall_2_0_1_0; }

		//values+=ID
		public Assignment getValuesAssignment_2_0_2() { return cValuesAssignment_2_0_2; }

		//ID
		public RuleCall getValuesIDTerminalRuleCall_2_0_2_0() { return cValuesIDTerminalRuleCall_2_0_2_0; }

		//"{" (values+=STRING | functions+=SimpleFunction) ("," (values+=STRING | functions+=SimpleFunction))* "}"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }

		//values+=STRING | functions+=SimpleFunction
		public Alternatives getAlternatives_2_1_1() { return cAlternatives_2_1_1; }

		//values+=STRING
		public Assignment getValuesAssignment_2_1_1_0() { return cValuesAssignment_2_1_1_0; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_1_1_0_0() { return cValuesSTRINGTerminalRuleCall_2_1_1_0_0; }

		//functions+=SimpleFunction
		public Assignment getFunctionsAssignment_2_1_1_1() { return cFunctionsAssignment_2_1_1_1; }

		//SimpleFunction
		public RuleCall getFunctionsSimpleFunctionParserRuleCall_2_1_1_1_0() { return cFunctionsSimpleFunctionParserRuleCall_2_1_1_1_0; }

		//("," (values+=STRING | functions+=SimpleFunction))*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//values+=STRING | functions+=SimpleFunction
		public Alternatives getAlternatives_2_1_2_1() { return cAlternatives_2_1_2_1; }

		//values+=STRING
		public Assignment getValuesAssignment_2_1_2_1_0() { return cValuesAssignment_2_1_2_1_0; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_1_2_1_0_0() { return cValuesSTRINGTerminalRuleCall_2_1_2_1_0_0; }

		//functions+=SimpleFunction
		public Assignment getFunctionsAssignment_2_1_2_1_1() { return cFunctionsAssignment_2_1_2_1_1; }

		//SimpleFunction
		public RuleCall getFunctionsSimpleFunctionParserRuleCall_2_1_2_1_1_0() { return cFunctionsSimpleFunctionParserRuleCall_2_1_2_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_3() { return cRightCurlyBracketKeyword_2_1_3; }

		//"{" "@" "(" ID ")" "}"
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_0() { return cLeftCurlyBracketKeyword_2_2_0; }

		//"@"
		public Keyword getCommercialAtKeyword_2_2_1() { return cCommercialAtKeyword_2_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2_2() { return cLeftParenthesisKeyword_2_2_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_2_3() { return cIDTerminalRuleCall_2_2_3; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2_4() { return cRightParenthesisKeyword_2_2_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2_5() { return cRightCurlyBracketKeyword_2_2_5; }
	}

	public class BodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Body");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBodyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cComponentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComponentBodyComponentParserRuleCall_1_0 = (RuleCall)cComponentAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVariablesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVariablesIDTerminalRuleCall_3_1_0 = (RuleCall)cVariablesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cVariablesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cVariablesIDTerminalRuleCall_3_2_1_0 = (RuleCall)cVariablesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPromiseTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPromiseTypeBodyFunctionParserRuleCall_5_0 = (RuleCall)cPromiseTypeAssignment_5.eContents().get(0);
		private final Assignment cClassesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cClassesBodyClassParserRuleCall_6_0 = (RuleCall)cClassesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////	| '{''@' '(' ID ')' '}'); TODO?
		////(promiseType+=BundlePromiseType ':' ((PLACEHOLDERB) |
		////	'{' '@' (PLACEHOLDERB)* '}')*)*
		////	'}';
		////BodyPromiseType '=>' (values+=STRING | '{' values+=STRING
		//Body:
		//	"body" component=BodyComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{" promiseType+=BodyFunction*
		//	classes+=BodyClass* "}";
		public ParserRule getRule() { return rule; }

		//"body" component=BodyComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{" promiseType+=BodyFunction*
		//classes+=BodyClass* "}"
		public Group getGroup() { return cGroup; }

		//"body"
		public Keyword getBodyKeyword_0() { return cBodyKeyword_0; }

		//component=BodyComponent
		public Assignment getComponentAssignment_1() { return cComponentAssignment_1; }

		//BodyComponent
		public RuleCall getComponentBodyComponentParserRuleCall_1_0() { return cComponentBodyComponentParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" variables+=ID ("," variables+=ID)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//variables+=ID
		public Assignment getVariablesAssignment_3_1() { return cVariablesAssignment_3_1; }

		//ID
		public RuleCall getVariablesIDTerminalRuleCall_3_1_0() { return cVariablesIDTerminalRuleCall_3_1_0; }

		//("," variables+=ID)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//variables+=ID
		public Assignment getVariablesAssignment_3_2_1() { return cVariablesAssignment_3_2_1; }

		//ID
		public RuleCall getVariablesIDTerminalRuleCall_3_2_1_0() { return cVariablesIDTerminalRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//promiseType+=BodyFunction*
		public Assignment getPromiseTypeAssignment_5() { return cPromiseTypeAssignment_5; }

		//BodyFunction
		public RuleCall getPromiseTypeBodyFunctionParserRuleCall_5_0() { return cPromiseTypeBodyFunctionParserRuleCall_5_0; }

		//classes+=BodyClass*
		public Assignment getClassesAssignment_6() { return cClassesAssignment_6; }

		//BodyClass
		public RuleCall getClassesBodyClassParserRuleCall_6_0() { return cClassesBodyClassParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class BodyClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCLASS_IDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPromiseTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPromiseTypeBodyFunctionParserRuleCall_2_0 = (RuleCall)cPromiseTypeAssignment_2.eContents().get(0);
		
		////	(',' values+=STRING)* '}') ';'
		//BodyClass:
		//	name=CLASS_ID "::" promiseType+=BodyFunction*;
		public ParserRule getRule() { return rule; }

		//name=CLASS_ID "::" promiseType+=BodyFunction*
		public Group getGroup() { return cGroup; }

		//name=CLASS_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//CLASS_ID
		public RuleCall getNameCLASS_IDParserRuleCall_0_0() { return cNameCLASS_IDParserRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }

		//promiseType+=BodyFunction*
		public Assignment getPromiseTypeAssignment_2() { return cPromiseTypeAssignment_2; }

		//BodyFunction
		public RuleCall getPromiseTypeBodyFunctionParserRuleCall_2_0() { return cPromiseTypeBodyFunctionParserRuleCall_2_0; }
	}

	public class BodyFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameBodyPromiseTypeParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cValuesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cListAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cListLeftCurlyBracketKeyword_2_1_0_0 = (Keyword)cListAssignment_2_1_0.eContents().get(0);
		private final Assignment cValuesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_1_1_0 = (RuleCall)cValuesAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_1_2_1_0 = (RuleCall)cValuesAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Assignment cFunctionAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cFunctionSpecialFunctionParserRuleCall_2_2_0 = (RuleCall)cFunctionAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Keyword cCommercialAtKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_2_3_3 = (RuleCall)cGroup_2_3.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_2_3_4 = (Keyword)cGroup_2_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_2_3_5 = (Keyword)cGroup_2_3.eContents().get(5);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//BodyFunction:
		//	name=BodyPromiseType "=>" (values+=STRING | List?="{" values+= //TODO List? unnecessary
		//	STRING ("," values+=STRING)* "}" | function+=SpecialFunction | "{" "@" "(" ID ")" "}") ";";
		public ParserRule getRule() { return rule; }

		//name=BodyPromiseType "=>" (values+=STRING | List?="{" values+= //TODO List? unnecessary
		//STRING ("," values+=STRING)* "}" | function+=SpecialFunction | "{" "@" "(" ID ")" "}") ";"
		public Group getGroup() { return cGroup; }

		//name=BodyPromiseType
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//BodyPromiseType
		public RuleCall getNameBodyPromiseTypeParserRuleCall_0_0() { return cNameBodyPromiseTypeParserRuleCall_0_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//values+=STRING | List?="{" values+= //TODO List? unnecessary
		//STRING ("," values+=STRING)* "}" | function+=SpecialFunction | "{" "@" "(" ID ")" "}"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//values+=STRING
		public Assignment getValuesAssignment_2_0() { return cValuesAssignment_2_0; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_0_0() { return cValuesSTRINGTerminalRuleCall_2_0_0; }

		//List?="{" values+= //TODO List? unnecessary
		//STRING ("," values+=STRING)* "}"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//List?="{"
		public Assignment getListAssignment_2_1_0() { return cListAssignment_2_1_0; }

		//"{"
		public Keyword getListLeftCurlyBracketKeyword_2_1_0_0() { return cListLeftCurlyBracketKeyword_2_1_0_0; }

		//values+= //TODO List? unnecessary
		//STRING
		public Assignment getValuesAssignment_2_1_1() { return cValuesAssignment_2_1_1; }

		////TODO List? unnecessary
		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_1_1_0() { return cValuesSTRINGTerminalRuleCall_2_1_1_0; }

		//("," values+=STRING)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//values+=STRING
		public Assignment getValuesAssignment_2_1_2_1() { return cValuesAssignment_2_1_2_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_1_2_1_0() { return cValuesSTRINGTerminalRuleCall_2_1_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1_3() { return cRightCurlyBracketKeyword_2_1_3; }

		//function+=SpecialFunction
		public Assignment getFunctionAssignment_2_2() { return cFunctionAssignment_2_2; }

		//SpecialFunction
		public RuleCall getFunctionSpecialFunctionParserRuleCall_2_2_0() { return cFunctionSpecialFunctionParserRuleCall_2_2_0; }

		//"{" "@" "(" ID ")" "}"
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_3_0() { return cLeftCurlyBracketKeyword_2_3_0; }

		//"@"
		public Keyword getCommercialAtKeyword_2_3_1() { return cCommercialAtKeyword_2_3_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_3_2() { return cLeftParenthesisKeyword_2_3_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_3_3() { return cIDTerminalRuleCall_2_3_3; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3_4() { return cRightParenthesisKeyword_2_3_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3_5() { return cRightCurlyBracketKeyword_2_3_5; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class SimpleFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdIDTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		////	(',' values+=STRING)* '}' | function+=SpecialFunction | '{' '@' (PLACEHOLDERB)* '}') ';';
		//SimpleFunction:
		//	id=ID "(" values+=STRING ("," values+=STRING)* ")";
		public ParserRule getRule() { return rule; }

		//id=ID "(" values+=STRING ("," values+=STRING)* ")"
		public Group getGroup() { return cGroup; }

		//id=ID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_0() { return cIdIDTerminalRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//values+=STRING
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_0() { return cValuesSTRINGTerminalRuleCall_2_0; }

		//("," values+=STRING)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=STRING
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_3_1_0() { return cValuesSTRINGTerminalRuleCall_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class SpecialFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpecialFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdIDTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2_2 = (RuleCall)cAlternatives_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_3 = (Keyword)cAlternatives_2.eContents().get(3);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Keyword cDollarSignLeftParenthesisKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_4_1 = (RuleCall)cGroup_2_4.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Keyword cDollarSignLeftCurlyBracketKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_5_1 = (RuleCall)cGroup_2_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_5_2 = (Keyword)cGroup_2_5.eContents().get(2);
		private final Assignment cFuncAssignment_2_6 = (Assignment)cAlternatives_2.eContents().get(6);
		private final RuleCall cFuncSpecialFunctionParserRuleCall_2_6_0 = (RuleCall)cFuncAssignment_2_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SpecialFunction:
		//	id=ID "(" (ANY_OTHER | ID | STRING | "," | "$(" ID ")" | "${" ID "}" | func+=SpecialFunction)*
		//	/ *(INT | STRING | ID | functions+=SpecialFunction) (',' (INT | STRING | ID | functions+=SpecialFunction))* * / ")";
		public ParserRule getRule() { return rule; }

		//id=ID "(" (ANY_OTHER | ID | STRING | "," | "$(" ID ")" | "${" ID "}" | func+=SpecialFunction)*
		/// *(INT | STRING | ID | functions+=SpecialFunction) (',' (INT | STRING | ID | functions+=SpecialFunction))* * / ")"
		public Group getGroup() { return cGroup; }

		//id=ID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_0() { return cIdIDTerminalRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(ANY_OTHER | ID | STRING | "," | "$(" ID ")" | "${" ID "}" | func+=SpecialFunction)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_2_0() { return cANY_OTHERTerminalRuleCall_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_2() { return cSTRINGTerminalRuleCall_2_2; }

		//","
		public Keyword getCommaKeyword_2_3() { return cCommaKeyword_2_3; }

		//"$(" ID ")"
		public Group getGroup_2_4() { return cGroup_2_4; }

		//"$("
		public Keyword getDollarSignLeftParenthesisKeyword_2_4_0() { return cDollarSignLeftParenthesisKeyword_2_4_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_4_1() { return cIDTerminalRuleCall_2_4_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_4_2() { return cRightParenthesisKeyword_2_4_2; }

		//"${" ID "}"
		public Group getGroup_2_5() { return cGroup_2_5; }

		//"${"
		public Keyword getDollarSignLeftCurlyBracketKeyword_2_5_0() { return cDollarSignLeftCurlyBracketKeyword_2_5_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_5_1() { return cIDTerminalRuleCall_2_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_5_2() { return cRightCurlyBracketKeyword_2_5_2; }

		//func+=SpecialFunction
		public Assignment getFuncAssignment_2_6() { return cFuncAssignment_2_6; }

		//SpecialFunction
		public RuleCall getFuncSpecialFunctionParserRuleCall_2_6_0() { return cFuncSpecialFunctionParserRuleCall_2_6_0; }

		/// *(INT | STRING | ID | functions+=SpecialFunction) (',' (INT | STRING | ID | functions+=SpecialFunction))* * / ")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class BodyPromiseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyPromiseType");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//BodyPromiseType:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class BundleComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BundleComponent");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//BundleComponent:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class BodyComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BodyComponent");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//BodyComponent:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	
	
	private CfModelElements pCfModel;
	private TerminalRule tID;
	private TerminalRule tSTRING;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	private CLASS_IDElements pCLASS_ID;
	private AbstractElementElements pAbstractElement;
	private BundleElements pBundle;
	private BundlePromiseTypeElements pBundlePromiseType;
	private BundleClassElements pBundleClass;
	private BundlePromiseElements pBundlePromise;
	private PromiseValueElements pPromiseValue;
	private BodyElements pBody;
	private BodyClassElements pBodyClass;
	private BodyFunctionElements pBodyFunction;
	private SimpleFunctionElements pSimpleFunction;
	private SpecialFunctionElements pSpecialFunction;
	private BodyPromiseTypeElements pBodyPromiseType;
	private BundleComponentElements pBundleComponent;
	private BodyComponentElements pBodyComponent;
	
	private final GrammarProvider grammarProvider;

	@Inject
	public CfengineEditorGrammarAccess(GrammarProvider grammarProvider) {
		this.grammarProvider = grammarProvider;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	
	//CfModel:
	//	elements+=AbstractElement*;
	public CfModelElements getCfModelAccess() {
		return (pCfModel != null) ? pCfModel : (pCfModel = new CfModelElements());
	}
	
	public ParserRule getCfModelRule() {
		return getCfModelAccess().getRule();
	}

	////'!'
	//terminal ID:
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	////terminal INT returns ecore::EInt: //omittable?
	////	('0'..'9')+;
	////terminal STRING:
	////	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\' ) | !('\\' | '"'))* '"' |
	////	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\' ) | !('\\' | "'"))* "'";
	//terminal STRING:
	//	"\"" (!("\\" | "\"") | "\\" .)* "\"" | "\'" (!("\\" | "\'") | "\\" .)* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal SL_COMMENT:
	//	"#" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 

	//CLASS_ID returns ecore::EString:
	//	ID ("." CLASS_ID)? | "!" CLASS_ID | "(" CLASS_ID ")" ("." CLASS_ID)?;
	public CLASS_IDElements getCLASS_IDAccess() {
		return (pCLASS_ID != null) ? pCLASS_ID : (pCLASS_ID = new CLASS_IDElements());
	}
	
	public ParserRule getCLASS_IDRule() {
		return getCLASS_IDAccess().getRule();
	}

	////(ID | '(' | ')' | '|' | '!' | '.')+;
	////PLACEHOLDER:
	////	(ANY_OTHER | ID | STRING | '=>' | ';' | ',' | '(' | ')' | '{' | '}' | '@');
	////PLACEHOLDERB:
	////	(ANY_OTHER | ID | STRING | '=>' | ';' | ',' | '(' | ')');
	//AbstractElement:
	//	Bundle | Body;
	public AbstractElementElements getAbstractElementAccess() {
		return (pAbstractElement != null) ? pAbstractElement : (pAbstractElement = new AbstractElementElements());
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}

	//Bundle:
	//	"bundle" component=BundleComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{"
	//	promiseType+=BundlePromiseType* "}";
	public BundleElements getBundleAccess() {
		return (pBundle != null) ? pBundle : (pBundle = new BundleElements());
	}
	
	public ParserRule getBundleRule() {
		return getBundleAccess().getRule();
	}

	//BundlePromiseType:
	//	name=ID ":" promises+=BundlePromise* classes+=BundleClass*;
	public BundlePromiseTypeElements getBundlePromiseTypeAccess() {
		return (pBundlePromiseType != null) ? pBundlePromiseType : (pBundlePromiseType = new BundlePromiseTypeElements());
	}
	
	public ParserRule getBundlePromiseTypeRule() {
		return getBundlePromiseTypeAccess().getRule();
	}

	////TODO + or * ?
	//BundleClass:
	//	name=CLASS_ID "::" promises+=BundlePromise+;
	public BundleClassElements getBundleClassAccess() {
		return (pBundleClass != null) ? pBundleClass : (pBundleClass = new BundleClassElements());
	}
	
	public ParserRule getBundleClassRule() {
		return getBundleClassAccess().getRule();
	}

	////name=STRING (values+=PromiseValue (',' values+=PromiseValue)*)* ';';
	//BundlePromise:
	//	name=STRING (values+=PromiseValue ("," values+=PromiseValue)*)? ";";
	public BundlePromiseElements getBundlePromiseAccess() {
		return (pBundlePromise != null) ? pBundlePromise : (pBundlePromise = new BundlePromiseElements());
	}
	
	public ParserRule getBundlePromiseRule() {
		return getBundlePromiseAccess().getRule();
	}

	////TODO "| ID"?
	//PromiseValue:
	//	keyword=ID "=>" ((values+=STRING | functions+=SimpleFunction | values+=ID) | "{" (values+=STRING |
	//	functions+=SimpleFunction) ("," (values+=STRING | functions+=SimpleFunction))* "}" | "{" "@" "(" ID ")" "}");
	public PromiseValueElements getPromiseValueAccess() {
		return (pPromiseValue != null) ? pPromiseValue : (pPromiseValue = new PromiseValueElements());
	}
	
	public ParserRule getPromiseValueRule() {
		return getPromiseValueAccess().getRule();
	}

	////	| '{''@' '(' ID ')' '}'); TODO?
	////(promiseType+=BundlePromiseType ':' ((PLACEHOLDERB) |
	////	'{' '@' (PLACEHOLDERB)* '}')*)*
	////	'}';
	////BodyPromiseType '=>' (values+=STRING | '{' values+=STRING
	//Body:
	//	"body" component=BodyComponent name=ID ("(" variables+=ID ("," variables+=ID)* ")")? "{" promiseType+=BodyFunction*
	//	classes+=BodyClass* "}";
	public BodyElements getBodyAccess() {
		return (pBody != null) ? pBody : (pBody = new BodyElements());
	}
	
	public ParserRule getBodyRule() {
		return getBodyAccess().getRule();
	}

	////	(',' values+=STRING)* '}') ';'
	//BodyClass:
	//	name=CLASS_ID "::" promiseType+=BodyFunction*;
	public BodyClassElements getBodyClassAccess() {
		return (pBodyClass != null) ? pBodyClass : (pBodyClass = new BodyClassElements());
	}
	
	public ParserRule getBodyClassRule() {
		return getBodyClassAccess().getRule();
	}

	//BodyFunction:
	//	name=BodyPromiseType "=>" (values+=STRING | List?="{" values+= //TODO List? unnecessary
	//	STRING ("," values+=STRING)* "}" | function+=SpecialFunction | "{" "@" "(" ID ")" "}") ";";
	public BodyFunctionElements getBodyFunctionAccess() {
		return (pBodyFunction != null) ? pBodyFunction : (pBodyFunction = new BodyFunctionElements());
	}
	
	public ParserRule getBodyFunctionRule() {
		return getBodyFunctionAccess().getRule();
	}

	////	(',' values+=STRING)* '}' | function+=SpecialFunction | '{' '@' (PLACEHOLDERB)* '}') ';';
	//SimpleFunction:
	//	id=ID "(" values+=STRING ("," values+=STRING)* ")";
	public SimpleFunctionElements getSimpleFunctionAccess() {
		return (pSimpleFunction != null) ? pSimpleFunction : (pSimpleFunction = new SimpleFunctionElements());
	}
	
	public ParserRule getSimpleFunctionRule() {
		return getSimpleFunctionAccess().getRule();
	}

	//SpecialFunction:
	//	id=ID "(" (ANY_OTHER | ID | STRING | "," | "$(" ID ")" | "${" ID "}" | func+=SpecialFunction)*
	//	/ *(INT | STRING | ID | functions+=SpecialFunction) (',' (INT | STRING | ID | functions+=SpecialFunction))* * / ")";
	public SpecialFunctionElements getSpecialFunctionAccess() {
		return (pSpecialFunction != null) ? pSpecialFunction : (pSpecialFunction = new SpecialFunctionElements());
	}
	
	public ParserRule getSpecialFunctionRule() {
		return getSpecialFunctionAccess().getRule();
	}

	//BodyPromiseType:
	//	name=ID;
	public BodyPromiseTypeElements getBodyPromiseTypeAccess() {
		return (pBodyPromiseType != null) ? pBodyPromiseType : (pBodyPromiseType = new BodyPromiseTypeElements());
	}
	
	public ParserRule getBodyPromiseTypeRule() {
		return getBodyPromiseTypeAccess().getRule();
	}

	//BundleComponent:
	//	name=ID;
	public BundleComponentElements getBundleComponentAccess() {
		return (pBundleComponent != null) ? pBundleComponent : (pBundleComponent = new BundleComponentElements());
	}
	
	public ParserRule getBundleComponentRule() {
		return getBundleComponentAccess().getRule();
	}

	//BodyComponent:
	//	name=ID;
	public BodyComponentElements getBodyComponentAccess() {
		return (pBodyComponent != null) ? pBodyComponent : (pBodyComponent = new BodyComponentElements());
	}
	
	public ParserRule getBodyComponentRule() {
		return getBodyComponentAccess().getRule();
	}
}
